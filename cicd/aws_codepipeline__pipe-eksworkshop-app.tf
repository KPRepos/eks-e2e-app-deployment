# File generated by aws2tf see https://github.com/aws-samples/aws2tf
resource "aws_codepipeline" "pipe-deploy-apps-eks" {
  name       = "deploy-node-js-app-eks"
  depends_on = [aws_iam_role.AWSCodePipelineServiceRole-pipe-node-js-sample-app, aws_codebuild_project.eks-build-app]
  role_arn   = aws_iam_role.AWSCodePipelineServiceRole-pipe-node-js-sample-app.arn
  tags       = {}

  artifact_store {
    location = aws_s3_bucket.codepipeline-bucket.bucket
    type     = "S3"
  }

  stage {
    name = "Source"

    action {
      category = "Source"
      configuration = {
        "PollForSourceChanges" = "false"
        "S3Bucket"         = "${aws_s3_bucket.codebuild-artifacts-private_bucket.id}"
        "S3ObjectKey"      = "node-js-sample-app.zip"
      }
      input_artifacts = []
      name            = "Source"
      namespace       = "SourceVariables"
      output_artifacts = [
        "SourceArtifact",
      ]
      owner     = "AWS"
      provider  = "S3"
      region    = data.aws_region.current.name
      run_order = 1
      version   = "1"
    }
  }
  # stage {
  # name = "Approve"

  # action {
  #   name     = "Approval"
  #   category = "Approval"
  #   owner    = "AWS"
  #   provider = "Manual"
  #   version  = "1"

  #   # configuration {
  #   #   NotificationArn = "${var.approve_sns_arn}"
  #   #   CustomData = "${var.approve_comment}"
  #   #   ExternalEntityLink = "${var.approve_url}"
  #   # }
  #   }
  # }
  
  stage {
    name = "Build"

    action {
      category = "Build"
      configuration = {
        "ProjectName" = "eks-build-app"
      }
      input_artifacts = [
        "SourceArtifact",
      ]
      name      = "Build"
      namespace = "BuildVariables"
      output_artifacts = [
        "BuildArtifact",
      ]
      owner     = "AWS"
      provider  = "CodeBuild"
      region    = data.aws_region.current.name
      run_order = 1
      version   = "1"
    }
  }
  
    stage {
    name = "Deploy"

    action {
      category = "Build"
      configuration = {
        "ProjectName" = "eks-deploy-app"
      }
      input_artifacts = [
        "SourceArtifact",
      ]
      name      = "Deploy"
      namespace = "deployariables"
      # output_artifacts = [
      #   "BuildArtifact",
      # ]
      owner     = "AWS"
      provider  = "CodeBuild"
      region    = data.aws_region.current.name
      run_order = 1
      version   = "1"
    }
  }
  
}


# # File generated by aws2tf see https://github.com/aws-samples/aws2tf
# resource "aws_codepipeline" "pipe-nodejs-sample-app-delete" {
#   name       = "delete-nodejs-app-eks"
#   depends_on = [aws_iam_role.AWSCodePipelineServiceRole-pipe-nodejs-sample-app]
#   role_arn   = aws_iam_role.AWSCodePipelineServiceRole-pipe-nodejs-sample-app.arn
#   tags       = {}

#   artifact_store {
#     location = aws_s3_bucket.codepipeline-bucket.bucket
#     type     = "S3"

#   }

#   stage {
#     name = "Source"

#     action {
#       category = "Source"
#       configuration = {
#         "BranchName"           = "master"
#         "OutputArtifactFormat" = "CODE_ZIP"
#         "PollForSourceChanges" = "true"
#         "RepositoryName"       = "nodejs-sample-app"
#       }
#       input_artifacts = []
#       name            = "Source"
#       namespace       = "SourceVariables"
#       output_artifacts = [
#         "SourceArtifact",
#       ]
#       owner     = "AWS"
#       provider  = "CodeCommit"
#       region    = data.aws_region.current.name
#       run_order = 1
#       version   = "1"
#     }
#   }
#   stage {
#   name = "Approve"

#   action {
#     name     = "Approval"
#     category = "Approval"
#     owner    = "AWS"
#     provider = "Manual"
#     version  = "1"

#     # configuration {
#     #   NotificationArn = "${var.approve_sns_arn}"
#     #   CustomData = "${var.approve_comment}"
#     #   ExternalEntityLink = "${var.approve_url}"
#     # }
#     }
#   }
  
#   stage {
#     name = "Delete-Apps"

#     action {
#       category = "Build"
#       configuration = {
#         "ProjectName" = "eks-cicd-delete-apps"
#       }
#       input_artifacts = [
#         "SourceArtifact",
#       ]
#       name      = "Build"
#       namespace = "BuildVariables"
#       output_artifacts = [
#         "BuildArtifact",
#       ]
#       owner     = "AWS"
#       provider  = "CodeBuild"
#       region    = data.aws_region.current.name
#       run_order = 1
#       version   = "1"
#     }
#   }
# }
